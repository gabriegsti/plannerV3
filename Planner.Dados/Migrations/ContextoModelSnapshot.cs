// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Planner.Dados;

#nullable disable

namespace Planner.Dados.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Planner.Entidades.Anotacao", b =>
                {
                    b.Property<int>("Id_Anotacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Anotacao"));

                    b.Property<int?>("AulaId")
                        .HasColumnType("integer");

                    b.Property<string>("Campo_Texto")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Anotacao");

                    b.HasIndex("AulaId");

                    b.ToTable("Anotacao");
                });

            modelBuilder.Entity("Planner.Entidades.Aula", b =>
                {
                    b.Property<int>("Id_Aula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Aula"));

                    b.Property<DateTime>("Data_Hora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Id_Materia")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("MateriaId_Materia")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id_Aula");

                    b.HasIndex("MateriaId_Materia");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("Planner.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("Id_Avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Avaliacao"));

                    b.Property<DateTime?>("Data_Hora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EventoId")
                        .HasColumnType("integer");

                    b.Property<int>("MateriaId")
                        .HasColumnType("integer");

                    b.Property<double?>("Nota")
                        .HasColumnType("double precision");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id_Avaliacao");

                    b.HasIndex("EventoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Planner.Entidades.Evento", b =>
                {
                    b.Property<int>("Id_Evento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Evento"));

                    b.Property<DateTime?>("Data_Hora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id_Evento");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Planner.Entidades.Materia", b =>
                {
                    b.Property<int>("Id_Materia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Materia"));

                    b.Property<DateTime?>("Data_Fim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Data_Inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("Id_Usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Professor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id_Materia");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("Planner.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Planner.Entidades.Anotacao", b =>
                {
                    b.HasOne("Planner.Entidades.Aula", "Aula")
                        .WithMany("LstAnotacoes")
                        .HasForeignKey("AulaId");

                    b.Navigation("Aula");
                });

            modelBuilder.Entity("Planner.Entidades.Aula", b =>
                {
                    b.HasOne("Planner.Entidades.Materia", null)
                        .WithMany("LstAulas")
                        .HasForeignKey("MateriaId_Materia");
                });

            modelBuilder.Entity("Planner.Entidades.Avaliacao", b =>
                {
                    b.HasOne("Planner.Entidades.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planner.Entidades.Materia", "materia")
                        .WithMany("LstAvaliacoes")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("materia");
                });

            modelBuilder.Entity("Planner.Entidades.Evento", b =>
                {
                    b.HasOne("Planner.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Planner.Entidades.Aula", b =>
                {
                    b.Navigation("LstAnotacoes");
                });

            modelBuilder.Entity("Planner.Entidades.Materia", b =>
                {
                    b.Navigation("LstAulas");

                    b.Navigation("LstAvaliacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
